<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.pandora.mall.mapper.social.SocialUserIntegralMapper">
  <resultMap id="BaseResultMap" type="io.pandora.mall.domian.social.SocialUserIntegral">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="accumulate" jdbcType="DECIMAL" property="accumulate" />
    <result column="consume" jdbcType="DECIMAL" property="consume" />
    <result column="freeze" jdbcType="DECIMAL" property="freeze" />
    <result column="score_memo" jdbcType="VARCHAR" property="scoreMemo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, accumulate, consume, freeze, score_memo, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="io.pandora.mall.domian.social.SocialUserIntegralExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from social_user_integral
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from social_user_integral
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from social_user_integral
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.pandora.mall.domian.social.SocialUserIntegralExample">
    delete from social_user_integral
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="io.pandora.mall.domian.social.SocialUserIntegral">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into social_user_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="accumulate != null">
        accumulate,
      </if>
      <if test="consume != null">
        consume,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
      <if test="scoreMemo != null">
        score_memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="accumulate != null">
        #{accumulate,jdbcType=DECIMAL},
      </if>
      <if test="consume != null">
        #{consume,jdbcType=DECIMAL},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=DECIMAL},
      </if>
      <if test="scoreMemo != null">
        #{scoreMemo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.pandora.mall.domian.social.SocialUserIntegralExample" resultType="java.lang.Long">
    select count(*) from social_user_integral
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update social_user_integral
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.accumulate != null">
        accumulate = #{record.accumulate,jdbcType=DECIMAL},
      </if>
      <if test="record.consume != null">
        consume = #{record.consume,jdbcType=DECIMAL},
      </if>
      <if test="record.freeze != null">
        freeze = #{record.freeze,jdbcType=DECIMAL},
      </if>
      <if test="record.scoreMemo != null">
        score_memo = #{record.scoreMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update social_user_integral
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      accumulate = #{record.accumulate,jdbcType=DECIMAL},
      consume = #{record.consume,jdbcType=DECIMAL},
      freeze = #{record.freeze,jdbcType=DECIMAL},
      score_memo = #{record.scoreMemo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.pandora.mall.domian.social.SocialUserIntegral">
    update social_user_integral
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="accumulate != null">
        accumulate = #{accumulate,jdbcType=DECIMAL},
      </if>
      <if test="consume != null">
        consume = #{consume,jdbcType=DECIMAL},
      </if>
      <if test="freeze != null">
        freeze = #{freeze,jdbcType=DECIMAL},
      </if>
      <if test="scoreMemo != null">
        score_memo = #{scoreMemo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.pandora.mall.domian.social.SocialUserIntegral">
    update social_user_integral
    set user_id = #{userId,jdbcType=BIGINT},
      accumulate = #{accumulate,jdbcType=DECIMAL},
      consume = #{consume,jdbcType=DECIMAL},
      freeze = #{freeze,jdbcType=DECIMAL},
      score_memo = #{scoreMemo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="increaseUserIntegral">
    UPDATE
      social_user_integral
    SET
      accumulate = accumulate + #{number}
    WHERE
      user_id = #{userId}
  </update>

  <update id="decreaseUserIntegral">
    UPDATE
      social_user_integral
    SET
      accumulate = accumulate - #{number}
    WHERE
      user_id = #{userId} AND accumulate >= #{number}
  </update>
</mapper>